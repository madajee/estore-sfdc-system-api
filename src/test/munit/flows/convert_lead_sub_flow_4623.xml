<?xml version="1.0" ?>
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="     http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd     http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd     http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd     http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
  <munit:config name="convert_lead_sub_flow_4623.xml"/>
  <munit:test name="convert_lead_sub_flow_0" description="Test convert-leadSubFlow for successful lead conversion with account name provided - covers the main conversion flow including lead query, account query when account name is provided, lead conversion, and response transformation.">
    <!-- Mock Salesforce operations and set up test data -->
    <munit:behavior>
      <!-- Set the input payload for the test -->
      <munit:set-event doc:name="Set Event">
        <munit:payload value="#[MunitTools::getResourceAsString('convert_lead_sub_flow_4623/convert-lead-input_1700.json')]" mediaType="application/json" encoding="UTF-8"/>
      </munit:set-event>
      <!-- Mock the Salesforce query operation for get-lead-by-name -->
      <munit-tools:mock-when doc:name="Mock get-lead-by-name" processor="salesforce:query">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get-lead-by-name" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('convert_lead_sub_flow_4623/get-lead-by-name-response_1967.json')]" mediaType="application/json" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <!-- Mock the Salesforce query operation for get-account-by-name -->
      <munit-tools:mock-when doc:name="Mock get-account-by-name" processor="salesforce:query">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get-account-by-name" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('convert_lead_sub_flow_4623/get-account-by-name-response_1556.json')]" mediaType="application/json" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
      <!-- Mock the Salesforce convert-lead operation -->
      <munit-tools:mock-when doc:name="Mock convert-lead" processor="salesforce:convert-lead">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="convert-lead" attributeName="doc:name"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('convert_lead_sub_flow_4623/convert-lead-response-data_1480.json')]" mediaType="application/json" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
    </munit:behavior>
    <!-- Execute the flow under test -->
    <munit:execution>
      <flow-ref doc:name="Flow-ref to convert-leadSubFlow" name="convert-leadSubFlow"/>
    </munit:execution>
    <!-- Validate the results -->
    <munit:validation>
      <!-- Verify that the get-lead-by-name Salesforce query operation is called -->
      <munit-tools:verify-call doc:name="Verify get-lead-by-name call" processor="salesforce:query" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get-lead-by-name" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the get-account-by-name Salesforce query operation is called -->
      <munit-tools:verify-call doc:name="Verify get-account-by-name call" processor="salesforce:query" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="get-account-by-name" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the convert-lead Salesforce operation is called -->
      <munit-tools:verify-call doc:name="Verify convert-lead call" processor="salesforce:convert-lead" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute whereValue="convert-lead" attributeName="doc:name"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the convertleadrequestparams variable is set correctly -->
      <munit-tools:assert-that doc:name="Assert convertleadrequestparams is set correctly" expression="#[vars.convertleadrequestparams]" is="#[MunitTools::notNullValue()]"/>
      <munit-tools:assert-that doc:name="Assert leadname in convertleadrequestparams" expression="#[vars.convertleadrequestparams.leadname]" is="#[MunitTools::equalTo('John Doe')]"/>
      <munit-tools:assert-that doc:name="Assert accountname in convertleadrequestparams" expression="#[vars.convertleadrequestparams.accountname]" is="#[MunitTools::equalTo('Acme Corporation')]"/>
      <munit-tools:assert-that doc:name="Assert opportunityname in convertleadrequestparams" expression="#[vars.convertleadrequestparams.opportunityname]" is="#[MunitTools::equalTo('Q2 Sales Opportunity')]"/>
      <munit-tools:assert-that doc:name="Assert doNotCreateOpportunity in convertleadrequestparams" expression="#[vars.convertleadrequestparams.doNotCreateOpportunity]" is="#[MunitTools::equalTo(false)]"/>
      <!-- Verify the final response structure -->
      <munit-tools:assert-that doc:name="Assert response is not null" expression="#[payload.response]" is="#[MunitTools::notNullValue()]"/>
      <munit-tools:assert-that doc:name="Assert response message" expression="#[payload.response.message]" is="#[MunitTools::equalTo('lead conversion without opportunity successful')]"/>
      <munit-tools:assert-that doc:name="Assert response payload" expression="#[payload.response.payload]" is="#[MunitTools::notNullValue()]"/>
      <munit-tools:assert-that doc:name="Assert response payload success" expression="#[payload.response.payload.success]" is="#[MunitTools::equalTo(true)]"/>
    </munit:validation>
  </munit:test>
</mule>